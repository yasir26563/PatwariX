{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-progressbar/lib/ng-progress-ref.ts","ng://ngx-progressbar/lib/ng-progress.interface.ts","ng://ngx-progressbar/lib/ng-progress.service.ts","ng://ngx-progressbar/lib/ng-progress.component.ts","ng://ngx-progressbar/lib/ng-progress.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","NgProgressRef","customConfig","_onDestroyCallback","_this","_started","Subject","started","pipe","filter","isStarted","_completed","completed","_trickling","_worker","Subscription","EMPTY","_state","BehaviorSubject","active","_config","state","asObservable","config","combineLatest","debounce","_a","_b","start","timer","debounceTime","switchMap","onTrickling","onComplete","subscribe","defineProperty","currState","complete","inc","amount","trickleFunc","set","setState","clamp","setConfig","destroy","unsubscribe","Math","max","min","trickleSpeed","tap","of","delay","speed","finalize","takeUntil","NG_PROGRESS_CONFIG","InjectionToken","defaultConfig","fixed","meteor","thick","spinner","ease","color","direction","spinnerPosition","NgProgress","_instances","Map","ref","id","has","progressRef","get","deleteInstance","destroyAll","forEach","delete","Injectable","args","providedIn","Optional","type","Inject","NgProgressComponent","_ngProgress","EventEmitter","ngOnChanges","ngOnInit","state$","map","transform","observers","emit","ngOnDestroy","Component","selector","host","role","[attr.spinnerPosition]","[attr.dir]","[attr.thick]","[attr.fixed]","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","Output","NgProgressModule","withConfig","ngModule","providers","provide","useValue","NgModule","declarations","exports","imports","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, Subject, BehaviorSubject, timer, of, combineLatest, Subscription, EMPTY } from 'rxjs';\r\nimport { tap, delay, debounce, switchMap, takeUntil, finalize, filter } from 'rxjs/operators';\r\nimport { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\n\r\nexport class NgProgressRef {\r\n\r\n  // Stream that emits when progress state is changed\r\n  private readonly _state: BehaviorSubject<NgProgressState>;\r\n  state: Observable<NgProgressState>;\r\n\r\n  // Stream that emits when config is changed\r\n  private readonly _config: BehaviorSubject<NgProgressConfig>;\r\n  config: Observable<NgProgressState>;\r\n\r\n  // Progress start source event (used to cancel finalizing delays)\r\n  private readonly _started = new Subject();\r\n  // Progress start event: stream that emits only when it hasn't already started\r\n  readonly started = this._started.pipe(filter(() => !this.isStarted));\r\n\r\n  // Progress ended source event\r\n  private readonly _completed = new Subject();\r\n  // Progress start event: stream that emits only when it has already started\r\n  readonly completed = this._completed.pipe(filter(() => this.isStarted));\r\n\r\n  // Stream that increments and updates the progress state\r\n  private readonly _trickling = new Subject();\r\n\r\n  // Stream that combines \"_trickling\" and \"config\" streams\r\n  private readonly _worker = Subscription.EMPTY;\r\n\r\n  // Get current progress state\r\n  private get currState(): NgProgressState {\r\n    return this._state.value;\r\n  }\r\n\r\n  // Check if progress has started\r\n  get isStarted(): boolean {\r\n    return this.currState.active;\r\n  }\r\n\r\n  constructor(customConfig: NgProgressConfig, private _onDestroyCallback: () => void) {\r\n    this._state = new BehaviorSubject<NgProgressState>({ active: false, value: 0 });\r\n    this._config = new BehaviorSubject<NgProgressConfig>(customConfig);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._state.asObservable();\r\n\r\n    this._worker = combineLatest(this._trickling, this._config).pipe(\r\n      debounce(([start, config]: [boolean, NgProgressConfig]) => timer(start ? config.debounceTime : 0)),\r\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this.onTrickling(config) : this.onComplete(config))\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Start the progress\r\n   */\r\n  start() {\r\n    this._started.next();\r\n    this._trickling.next(true);\r\n  }\r\n\r\n  /**\r\n   * Complete the progress\r\n   */\r\n  complete() {\r\n    this._trickling.next(false);\r\n  }\r\n\r\n  /**\r\n   * Increment the progress\r\n   */\r\n  inc(amount?: number) {\r\n    const n = this.currState.value;\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        amount = this._config.value.trickleFunc(n);\r\n      }\r\n      this.set(n + amount);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the progress\r\n   */\r\n  set(n: number) {\r\n    this.setState({ value: this.clamp(n), active: true });\r\n  }\r\n\r\n  /**\r\n   * Set config\r\n   */\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config.next({ ...this._config.value, ...config });\r\n  }\r\n\r\n  /**\r\n   * Destroy progress reference\r\n   */\r\n  destroy() {\r\n    this._worker.unsubscribe();\r\n    this._trickling.complete();\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this._started.complete();\r\n    this._completed.complete();\r\n    this._onDestroyCallback();\r\n  }\r\n\r\n  /**\r\n   * Set progress state\r\n   */\r\n  private setState(state: NgProgressState) {\r\n    this._state.next({ ...this.currState, ...state });\r\n  }\r\n\r\n  /**\r\n   * Clamps a value to be between min and max\r\n   */\r\n  private clamp(n: number): number {\r\n    return Math.max(this._config.value.min, Math.min(this._config.value.max, n));\r\n  }\r\n\r\n  /**\r\n   * Keeps incrementing the progress\r\n   */\r\n  private onTrickling(config: NgProgressConfig): Observable<number> {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.value.min);\r\n    }\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /**\r\n   * Completes then resets the progress\r\n   */\r\n  private onComplete(config: NgProgressConfig): Observable<any> {\r\n    this._completed.next();\r\n    return !this.isStarted ? EMPTY : of({}).pipe(\r\n      // Complete the progress\r\n      tap(() => this.setState({ value: 100 })),\r\n\r\n      // Deactivate the progress after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this.setState({ active: false })),\r\n\r\n      // Use a tiny delay before resetting\r\n      delay(config.speed),\r\n      // Force the progress to reset even it got cancelled\r\n      finalize(() => this.setState({ value: 0 })),\r\n      // Cancel any of the finalizing delays if the progress has started again\r\n      takeUntil(this._started)\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgProgressState {\r\n  active?: boolean;\r\n  value?: number;\r\n}\r\n\r\nexport interface NgProgressConfig {\r\n  spinnerPosition?: 'left' | 'right';\r\n  direction?: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\r\n  ease?: string;\r\n  color?: string;\r\n  thick?: boolean;\r\n  fixed?: boolean;\r\n  meteor?: boolean;\r\n  spinner?: boolean;\r\n  max?: number;\r\n  min?: number;\r\n  speed?: number;\r\n  trickleSpeed?: number;\r\n  trickleFunc?: (n: number) => number;\r\n  debounceTime?: number;\r\n}\r\n\r\nexport const NG_PROGRESS_CONFIG = new InjectionToken<NgProgressConfig>('ngProgressConfig');\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  min: 8,\r\n  max: 100,\r\n  speed: 200,\r\n  debounceTime: 0,\r\n  trickleSpeed: 300,\r\n  fixed: true,\r\n  meteor: true,\r\n  thick: false,\r\n  spinner: true,\r\n  ease: 'linear',\r\n  color: '#1B95E0',\r\n  direction: 'ltr+',\r\n  spinnerPosition: 'right',\r\n  trickleFunc: (n: number): number => {\r\n    if (n >= 0 && n < 20) return 10;\r\n    if (n >= 20 && n < 50) return 4;\r\n    if (n >= 50 && n < 80) return 2;\r\n    if (n >= 80 && n < 99) return 0.5;\r\n    return 0;\r\n  }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgProgress {\r\n\r\n  // Store progress bar instances\r\n  private readonly _instances = new Map<string, NgProgressRef>();\r\n\r\n  // Global config\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(NG_PROGRESS_CONFIG) config: NgProgressConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or Create progress bar by ID\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances.has(id)) {\r\n      // Get ProgressRef instance\r\n      const progressRef = this._instances.get(id);\r\n      if (config) {\r\n        progressRef.setConfig({...this.config, ...config});\r\n      }\r\n      return progressRef;\r\n    } else {\r\n      // Create new ProgressRef instance\r\n      const progressRef = new NgProgressRef({...this.config, ...config}, this.deleteInstance(id));\r\n      return this._instances.set(id, progressRef).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all progress bar instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: NgProgressRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each progress bar instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      this._instances.delete(id);\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, Subscription, SubscriptionLike} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick',\r\n    '[attr.fixed]': 'fixed'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [attr.active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./ng-progress.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started: SubscriptionLike = Subscription.EMPTY;\r\n  private _completed: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Stream that emits progress state */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() fixed: boolean = this._ngProgress.config.fixed;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\r\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when inputs change\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n        trickleFunc: this.trickleFunc,\r\n        debounceTime: this.debounceTime\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n      debounceTime: this.debounceTime\r\n    });\r\n\r\n    // Subscribe to progress state\r\n    this.state$ = this.progressRef.state.pipe(\r\n      map((state: NgProgressState) => ({\r\n        active: state.active,\r\n        transform: `translate3d(${state.value}%,0,0)`\r\n      }))\r\n    );\r\n\r\n    // Subscribes to started and completed events on demand\r\n    if (this.started.observers.length) {\r\n      this._started = this.progressRef.started.subscribe(() => this.started.emit());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed = this.progressRef.completed.subscribe(() => this.completed.emit());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._started.unsubscribe();\r\n    this._completed.unsubscribe();\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      this.progressRef.destroy();\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressComponent } from './ng-progress.component';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\n@NgModule({\r\n  declarations: [NgProgressComponent],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static withConfig(config: NgProgressConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [\r\n        {provide: NG_PROGRESS_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}