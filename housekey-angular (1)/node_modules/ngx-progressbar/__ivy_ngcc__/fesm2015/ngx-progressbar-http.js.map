{"version":3,"sources":["/Users/ahmedyasir/Downloads/PatwariX Revised/housekey-angular (1)/node_modules/ngx-progressbar/fesm2015/ngx-progressbar-http.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyEC,8HAGC;;;;;;;;;;;;;kCAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoCD;;;;;;;;0BAOC","file":"ngx-progressbar-http.js","sourcesContent":["import { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\nimport { NgProgress } from 'ngx-progressbar';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction NgProgressHttpConfig() { }\r\nif (false) {\r\n    /** @type {?|undefined} */\r\n    NgProgressHttpConfig.prototype.id;\r\n    /** @type {?|undefined} */\r\n    NgProgressHttpConfig.prototype.silentApis;\r\n}\r\n/** @type {?} */\r\nconst NG_PROGRESS_HTTP_CONFIG = new InjectionToken('ngProgressHttpConfig');\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgProgressInterceptor {\r\n    /**\r\n     * @param {?} ngProgress\r\n     * @param {?=} config\r\n     */\r\n    constructor(ngProgress, config) {\r\n        this._inProgressCount = 0;\r\n        this._config = {\r\n            id: 'root',\r\n            silentApis: []\r\n        };\r\n        this._config = config ? Object.assign({}, this._config, config) : this._config;\r\n        this._progressRef = ngProgress.ref(this._config.id);\r\n    }\r\n    /**\r\n     * @param {?} req\r\n     * @param {?} next\r\n     * @return {?}\r\n     */\r\n    intercept(req, next) {\r\n        // Ignore by request headers\r\n        if (req.headers.has('ignoreProgressBar')) {\r\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreProgressBar') }));\r\n        }\r\n        // Ignore silent api requests\r\n        if (this.checkUrl(req)) {\r\n            return next.handle(req);\r\n        }\r\n        this._inProgressCount++;\r\n        if (!this._progressRef.isStarted) {\r\n            this._progressRef.start();\r\n        }\r\n        return next.handle(req).pipe(finalize((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this._inProgressCount--;\r\n            if (this._inProgressCount === 0) {\r\n                this._progressRef.complete();\r\n            }\r\n        })));\r\n    }\r\n    /**\r\n     * Check if request is silent.\r\n     * @private\r\n     * @param {?} req request\r\n     * @return {?}\r\n     */\r\n    checkUrl(req) {\r\n        /** @type {?} */\r\n        const url = req.url.toLowerCase();\r\n        /** @type {?} */\r\n        const found = this._config.silentApis.find((/**\r\n         * @param {?} u\r\n         * @return {?}\r\n         */\r\n        (u) => url.startsWith(u)));\r\n        return !!found;\r\n    }\r\n}\r\nNgProgressInterceptor.decorators = [\r\n    { type: Injectable }\r\n];\r\n/** @nocollapse */\r\nNgProgressInterceptor.ctorParameters = () => [\r\n    { type: NgProgress },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_PROGRESS_HTTP_CONFIG,] }] }\r\n];\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgProgressInterceptor.prototype._inProgressCount;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgProgressInterceptor.prototype._progressRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgProgressInterceptor.prototype._config;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgProgressHttpModule {\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    static withConfig(config) {\r\n        return {\r\n            ngModule: NgProgressHttpModule,\r\n            providers: [\r\n                { provide: NG_PROGRESS_HTTP_CONFIG, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgProgressHttpModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                providers: [\r\n                    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\r\n                ]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NG_PROGRESS_HTTP_CONFIG, NgProgressHttpModule, NgProgressInterceptor as Éµa };\n"]}